{
  "stats": {
    "suites": 4,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2023-01-30T15:31:16.485Z",
    "end": "2023-01-30T15:31:16.631Z",
    "duration": 146,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "de33983e-fc23-41c9-8ce7-761376beee3a",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 20,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "c343429e-8dd5-4a0c-a1eb-6cec80aa052e",
          "parentUUID": "de33983e-fc23-41c9-8ce7-761376beee3a",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 5,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "eadb72b3-032c-4bf6-a220-20ab9e16be58",
          "parentUUID": "de33983e-fc23-41c9-8ce7-761376beee3a",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 6,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newuser = await createUser();",
          "err": {},
          "uuid": "affb203c-9564-4160-831d-7c7be004603d",
          "parentUUID": "de33983e-fc23-41c9-8ce7-761376beee3a",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "444c7138-e757-449e-82c8-0489aa4c1a5f",
          "title": "Create New User",
          "fullFile": "C:\\Users\\Wastech\\Desktop\\projects\\Mocha-Chai-Testing-Node-JS\\test\\create_user.js",
          "file": "\\test\\create_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "User Correctly Created",
              "fullTitle": "Create New User User Correctly Created",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  name: \"Jon Doe\",\n  email: \"doe@gmail.com\",\n  age: 21,\n};\nconst response = await axios.post(API_URL + \"/postuserinfo\", payload);\nexpect(response.status).to.be.equal(201);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "4db2298e-53fb-4790-ac28-c72710b3c173",
              "parentUUID": "444c7138-e757-449e-82c8-0489aa4c1a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding User Name",
              "fullTitle": "Create New User User Correctly Created Without Adding User Name",
              "timedOut": false,
              "duration": 3,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    email: \"doe@gmail.com\",\n    age: 21,\n  };\n  const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "56474c3f-92aa-481f-9e6b-e2a9192a7231",
              "parentUUID": "444c7138-e757-449e-82c8-0489aa4c1a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding User E-mail",
              "fullTitle": "Create New User User Correctly Created Without Adding User E-mail",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon Doe\",\n    age: 21,\n  };\n  const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "b544e0a3-3e1b-4b25-8be5-9616ad6623af",
              "parentUUID": "444c7138-e757-449e-82c8-0489aa4c1a5f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "User Correctly Created Without Adding User Age",
              "fullTitle": "Create New User User Correctly Created Without Adding User Age",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon Doe\",\n    email: \"doe@gmail.com\",\n  };\n  const response = await axios.post(API_URL + \"/postuserinfo\", payload);\n  expect(response.status).not.to.be.equal(201);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(201);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "84dfeb33-ae09-4176-af94-8321b5c748dc",
              "parentUUID": "444c7138-e757-449e-82c8-0489aa4c1a5f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4db2298e-53fb-4790-ac28-c72710b3c173",
            "56474c3f-92aa-481f-9e6b-e2a9192a7231",
            "b544e0a3-3e1b-4b25-8be5-9616ad6623af",
            "84dfeb33-ae09-4176-af94-8321b5c748dc"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "a8aa579d-07d5-4e1b-a949-0d6dfb0be809",
          "title": "Delete User From Database",
          "fullFile": "C:\\Users\\Wastech\\Desktop\\projects\\Mocha-Chai-Testing-Node-JS\\test\\delete_user.js",
          "file": "\\test\\delete_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete Single User",
              "fullTitle": "Delete User From Database Delete Single User",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete(API_URL + \"/deleteuser/\" + newuser._id);\n    expect(response.status).to.be.equal(200);\n    expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "9990dcf5-2b93-4662-8c7c-4dce5af61170",
              "parentUUID": "a8aa579d-07d5-4e1b-a949-0d6dfb0be809",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9990dcf5-2b93-4662-8c7c-4dce5af61170"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "126228a2-e66b-40a3-bbbd-5b5a050d9ca8",
          "title": "Get User Info",
          "fullFile": "C:\\Users\\Wastech\\Desktop\\projects\\Mocha-Chai-Testing-Node-JS\\test\\get_user.js",
          "file": "\\test\\get_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get All User Lists",
              "fullTitle": "Get User Info Get All User Lists",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/getuserinfo\");\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"array\");",
              "err": {},
              "uuid": "b312e77d-3663-469e-a704-a028f7ef2011",
              "parentUUID": "126228a2-e66b-40a3-bbbd-5b5a050d9ca8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Get Single User",
              "fullTitle": "Get User Info Get Single User",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\" + newuser._id);\n    expect(response.status).to.be.equal(200);\n    expect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "b9e96922-dd33-49b2-906b-14d2f19b1fba",
              "parentUUID": "126228a2-e66b-40a3-bbbd-5b5a050d9ca8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should have all the property for each user",
              "fullTitle": "Get User Info Should have all the property for each user",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + \"/singleuser/\" + newuser._id);\nexpect(response.data.email).to.be.equal(\"admin@gmail.com\");\nresponse.data.should.have.property(\"name\");\nresponse.data.should.have.property(\"email\");\nresponse.data.should.have.property(\"age\");\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "8e6f7a3c-0b7a-471f-862c-09464fe4f6af",
              "parentUUID": "126228a2-e66b-40a3-bbbd-5b5a050d9ca8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b312e77d-3663-469e-a704-a028f7ef2011",
            "b9e96922-dd33-49b2-906b-14d2f19b1fba",
            "8e6f7a3c-0b7a-471f-862c-09464fe4f6af"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
          "title": "Update User Information",
          "fullFile": "C:\\Users\\Wastech\\Desktop\\projects\\Mocha-Chai-Testing-Node-JS\\test\\update_user.js",
          "file": "\\test\\update_user.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update Single User All The Information Together",
              "fullTitle": "Update User Information Update Single User All The Information Together",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  name: \"Jon Doe to new user Becham\",\n  email: \"doe@gmail.com\",\n  age: 21,\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "887b45c5-5e03-4374-b373-495825fd8310",
              "parentUUID": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Name",
              "fullTitle": "Update User Information Update Single User Name",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  name: \"Jon Doe to new user Michle\",\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "801b0bd8-b576-4683-815c-f384d3429c0a",
              "parentUUID": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User E-mail",
              "fullTitle": "Update User Information Update Single User E-mail",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  email: \"jondoe@gmail.com\",\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "dbb90439-5bf8-466d-9f90-ae89518ac2b3",
              "parentUUID": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Age",
              "fullTitle": "Update User Information Update Single User Age",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  age: 29,\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "7b1e297b-dcab-445b-addc-9b1bf67f3d67",
              "parentUUID": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User With Wrong User ID",
              "fullTitle": "Update User Information Update Single User With Wrong User ID",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n  const payload = {\n    name: \"Jon Doe to new user Jesica\",\n    email: \"doe@gmail.com\",\n    age: 21,\n  };\n  const response = await axios.put(\n    API_URL + \"/updateuser/\" + 8989899,\n    payload\n  );\n  expect(response.status).not.to.be.equal(200);\n  expect(response.data).to.be.an(\"object\");\n} catch (error) {\n  if (error.response) {\n    expect(error.response.status).not.to.be.equal(200);\n  } else {\n    throw error;\n  }\n}",
              "err": {},
              "uuid": "eafef9ff-93e7-4ea9-8ea3-5b25354eb4ee",
              "parentUUID": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Information With New E-mail",
              "fullTitle": "Update User Information Update Single User Information With New E-mail",
              "timedOut": false,
              "duration": 7,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  email: \"d@gmail.com\",\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data.email).not.to.be.equal(\"d@gmail.com\");\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "f4092262-8924-49cc-8f2c-c96e1ec344a4",
              "parentUUID": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update Single User Information With New Age",
              "fullTitle": "Update User Information Update Single User Information With New Age",
              "timedOut": false,
              "duration": 6,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n  age: 29,\n};\nconst response = await axios.put(\n  API_URL + \"/updateuser/\" + newuser._id,\n  payload\n);\nexpect(response.status).to.be.equal(200);\nexpect(response.data.age).not.to.be.equal(28);\nexpect(response.data).to.be.an(\"object\");",
              "err": {},
              "uuid": "a195a456-da13-4dcb-9432-9681c589cd73",
              "parentUUID": "440ab9ac-8103-441e-9e4a-753a6f1800dd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "887b45c5-5e03-4374-b373-495825fd8310",
            "801b0bd8-b576-4683-815c-f384d3429c0a",
            "dbb90439-5bf8-466d-9f90-ae89518ac2b3",
            "7b1e297b-dcab-445b-addc-9b1bf67f3d67",
            "eafef9ff-93e7-4ea9-8ea3-5b25354eb4ee",
            "f4092262-8924-49cc-8f2c-c96e1ec344a4",
            "a195a456-da13-4dcb-9432-9681c589cd73"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 42,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}